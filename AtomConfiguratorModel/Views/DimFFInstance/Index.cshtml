@*@model IEnumerable<AtomConfiguratorModel.Models.DimFFInstance>*@
@model PagedList.IPagedList<AtomConfiguratorModel.Models.DimFFInstance>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<div id="ffinstance" class="form-crud" style="width:200% ;height:150%; background-color:#ffffff">
    <div style="float:left; margin-left:25%">
        <h2>FlexFlow Instances</h2>

        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
        
        @using (Html.BeginForm(Html.BeginForm("Index", "DimFFInstance", FormMethod.Get)))
        {

            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { placeholder = "Enter Keyword", style = " border: 3px solid #ccc; border-radius: 25px; padding-left: 1em; padding-right: 1em; text-align:center; font-color:#ccc" }) <br /><br />
            <input id="search" class="btn btn-success" type="submit" value="Filter" />
            <input id="reset" type="button" class="btn btn-primary " value="Reset" onclick="location.href='@Url.Action("Index")'" />

        }
      
    </div>
    <table class="responsive">
        <tr></tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().DataSourceName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().HostName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DatabaseName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ProjectName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DataFilePrefix)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ReplicationDelayMinute)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ITContactName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ITPhone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ITEmail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().QAContactName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().QAPhone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().QAEmail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().SiteName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().BaanCoNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DimModule.ModuleName)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DataSourceName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HostName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DatabaseName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Password)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataFilePrefix)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReplicationDelayMinute)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ITContactName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ITPhone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ITEmail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QAContactName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QAPhone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QAEmail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SiteName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BaanCoNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DimModule.ModuleName)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.id })
                </td>
            </tr>
        }

    </table>

    <div style="float:left; margin-left:25%">
        <br />
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
     new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </div>
    </div>