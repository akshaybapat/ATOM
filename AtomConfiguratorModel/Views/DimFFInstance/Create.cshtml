@model AtomConfiguratorModel.Models.DimFFInstance

@{
    ViewBag.Title = "Create";
}


   


    @using (Html.BeginForm("Create", "DimFFInstance", FormMethod.Post, new { id="msform" }))
    {
        @Html.AntiForgeryToken()
         <h2>Create</h2>
         <fieldset>
            <h4>DimFFInstance</h4>
            <hr />
            @Html.ValidationSummary(true)
           
                <div class="form-group">
                    @Html.LabelFor(model => model.DataSourceName, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.DataSourceName)
                        @Html.ValidationMessageFor(model => model.DataSourceName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HostName, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.HostName)
                        @Html.ValidationMessageFor(model => model.HostName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DatabaseName, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.DatabaseName)
                        @Html.ValidationMessageFor(model => model.DatabaseName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.UserName)
                        @Html.ValidationMessageFor(model => model.UserName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.Password)
                        @Html.ValidationMessageFor(model => model.Password)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectName, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.ProjectName)
                        @Html.ValidationMessageFor(model => model.ProjectName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DataFilePrefix, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.DataFilePrefix)
                        @Html.ValidationMessageFor(model => model.DataFilePrefix)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReplicationDelayMinute, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.ReplicationDelayMinute)
                        @Html.ValidationMessageFor(model => model.ReplicationDelayMinute)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive)
                    </div>
                </div>
             <input type="button" name="next" class="next action-button" value="Next" />
            </fieldset>
            <fieldset>
                <h4>DimFFInstance (Continued)</h4>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.KeyModule, "KeyModule", new { @class = "control-label col-md-2" })
                    <div>
                        @Html.DropDownList("KeyModule", String.Empty)
                        @Html.ValidationMessageFor(model => model.KeyModule)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ITContactName, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.ITContactName)
                        @Html.ValidationMessageFor(model => model.ITContactName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ITPhone, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.ITPhone)
                        @Html.ValidationMessageFor(model => model.ITPhone)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ITEmail, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.ITEmail)
                        @Html.ValidationMessageFor(model => model.ITEmail)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.QAContactName, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.QAContactName)
                        @Html.ValidationMessageFor(model => model.QAContactName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.QAPhone, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.QAPhone)
                        @Html.ValidationMessageFor(model => model.QAPhone)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.QAEmail, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.QAEmail)
                        @Html.ValidationMessageFor(model => model.QAEmail)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SiteName, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.SiteName)
                        @Html.ValidationMessageFor(model => model.SiteName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BaanCoNo, new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.BaanCoNo)
                        @Html.ValidationMessageFor(model => model.BaanCoNo)
                    </div>
                </div>
                <input type="button" name="previous" class="previous action-button" value="Previous" />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>

            </fieldset>
  

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    }



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
